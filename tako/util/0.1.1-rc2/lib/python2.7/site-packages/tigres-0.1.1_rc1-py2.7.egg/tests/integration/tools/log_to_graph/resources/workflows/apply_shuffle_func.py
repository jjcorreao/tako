"""
Iteration & sequential example 
Example: array shuffling 
"""

import os
import sys
import random

from tigres import *
from tigres.utils import Execution, State

from shuffle import shuffle, shuffleRange


def main(execution):
    # Setup up the Tigres Program using __file__ to build the log file name
    start(name="ApplyShuffleFunc", log_dest=os.path.splitext(__file__)[0] + '.log', execution=execution)

    set_log_level(Level.DEBUG)

    # Program input 
    input = [_ for _ in range(1, 10)]

    print("\n++++++++++++++++++++++++++++")
    print("Initial Input: {}".format(input))
    print("++++++++++++++++++++++++++++\n")

    # Loop over 5 separate sequence templates (which still use PREVIOUS dependency)
    for i in range(5):
        task_array = TaskArray('Shuffling tasks')
        input_array = InputArray("Shuffle inputs")
        task_array.append(Task("Shuffle Step", FUNCTION, impl_name=shuffle, input_types=[list]))
        if i == 0:
            input_array.append([input])
        else:
            print("using PREVIOUS")
            input_array.append([PREVIOUS])

        output = sequence('Shuffle-{}'.format(i), task_array, input_array)

        # Check the status of the template execution in the log
        task_check = check('task', names=[task.name for task in task_array], state=State.FAIL)
        assert (not task_check)

        # Print the output
        print("++++++++++++++++++++++++++++")
        print("Output {}: {}".format(i, str(output)))
        print("++++++++++++++++++++++++++++\n")

        # Create a DOT (plain text graph) file
        dot_execution()


if __name__ == "__main__":
    # Simple Usage Here
    if len(sys.argv) <= 1:
        print("Usage: {} ({})>".format(sys.argv[0], "|".join(Execution.LOOKUP.keys())))
        exit()
    main(Execution.get(sys.argv[1]))

    