import os
from mock import patch, MagicMock
from tigres import Record
from tigres.utils import State

__author__ = 'val'

import unittest
import tigres.core.tools.log as tlog
import tigres


class TestToolsLogQuery(unittest.TestCase):

    def setUp(self):
        self.put = tigres.core.tools.log.kvp.LogWriter.put

    def tearDown(self):
        put = tigres.core.tools.log.kvp.LogWriter.put = self.put

    def test_query_template(self):

        dir = os.path.dirname(__file__)

        with patch('tigres.core.tools.log.kvp.LogWriter.put', new_callable=MagicMock) as mock_writer:
            tlog.main(['query', '-F', 'event,state,tg_ntype', '-e', 'tg_ntype ~ template.*', '{}/test.log'.format(dir)])
            print(mock_writer.call_count)
            assert mock_writer.call_count == 8
            states = [State.RUN, State.DONE]
            for idx, args in enumerate(mock_writer.call_args_list):
                a_dict = args[0][0].as_dict()
                assert 'event' in a_dict
                assert a_dict['event'] == states[idx % 2]
                assert 'level' in a_dict
                assert 'ts' in a_dict
                assert 'tg_ntype' in a_dict
                if idx < 6:
                    assert a_dict['tg_ntype'] == 'template_parallel'
                else:
                    assert a_dict['tg_ntype'] == 'template_merge'

            mock_writer.clear()


if __name__ == '__main__':
    unittest.main()
